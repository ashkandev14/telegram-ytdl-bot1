import telebot
import yt_dlp
import os

from dotenv import load_dotenv
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_USERNAME = os.getenv("ADMIN_USERNAME")  # ŸÅŸÇÿ∑ €åŸàÿ≤ÿ±ŸÜ€åŸÖ ÿ®ÿØŸàŸÜ @
bot = telebot.TeleBot(BOT_TOKEN)

MAX_FILE_SIZE_MB = 50
REQUIRED_CHANNELS = []

def is_user_subscribed(user_id):
    for channel in REQUIRED_CHANNELS:
        try:
            member = bot.get_chat_member(channel, user_id)
            if member.status not in ['member', 'administrator', 'creator']:
                return False
        except:
            return False
    return True

def download_best_quality(url):
    temp_dir = "downloads"
    os.makedirs(temp_dir, exist_ok=True)

    ydl_opts = {
        'quiet': True,
        'skip_download': True,
        'forcejson': True
    }

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=False)
        formats = sorted(info['formats'], key=lambda x: x.get('height', 0), reverse=True)

        for fmt in formats:
            filesize = fmt.get('filesize')
            if filesize and filesize < MAX_FILE_SIZE_MB * 1024 * 1024 and fmt.get('ext') == 'mp4':
                download_opts = {
                    'format': fmt['format_id'],
                    'outtmpl': f'{temp_dir}/%(id)s.%(ext)s',
                    'quiet': True
                }
                with yt_dlp.YoutubeDL(download_opts) as downloader:
                    downloader.download([url])
                    filepath = f"{temp_dir}/{info['id']}.{fmt['ext']}"
                    return filepath
    return None

@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    if not is_user_subscribed(user_id):
        if REQUIRED_CHANNELS:
            links = "\n".join([f"üëâ {ch}" for ch in REQUIRED_CHANNELS])
            bot.send_message(message.chat.id, f"üîí ÿ®ÿ±ÿß€å ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿßÿ≤ ÿ±ÿ®ÿßÿ™ÿå ÿ®ÿß€åÿØ ÿπÿ∂Ÿà ÿß€åŸÜ ⁄©ÿßŸÜÿßŸÑ‚ÄåŸáÿß ÿ®ÿßÿ¥€å:\n\n{links}\n\nÿ≥Ÿæÿ≥ ÿØŸàÿ®ÿßÿ±Ÿá /start ÿ±Ÿà ÿ®ŸÅÿ±ÿ≥ÿ™ ‚úÖ")
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è ŸÑ€åÿ≥ÿ™ ⁄©ÿßŸÜÿßŸÑ‚ÄåŸáÿß ŸáŸÜŸàÿ≤ ÿ™Ÿàÿ≥ÿ∑ ÿßÿØŸÖ€åŸÜ ÿ™ŸÜÿ∏€åŸÖ ŸÜÿ¥ÿØŸá.")
        return
    bot.send_message(message.chat.id, "ÿ≥ŸÑÿßŸÖ! üé¨ ŸÑ€åŸÜ⁄© €åŸàÿ™€åŸàÿ®ÿ™Ÿà ÿ®ŸÅÿ±ÿ≥ÿ™ ÿ™ÿß ÿ®ÿ±ÿßÿ™ Ÿà€åÿØ€åŸà ÿ±Ÿà ÿ®ŸÅÿ±ÿ≥ÿ™ŸÖ.")

@bot.message_handler(commands=['setchannels'])
def set_channels(message):
    if message.from_user.username != ADMIN_USERNAME:
        bot.reply_to(message, "‚õîÔ∏è ŸÅŸÇÿ∑ ÿßÿØŸÖ€åŸÜ ŸÖ€å‚Äåÿ™ŸàŸÜŸá ŸÑ€åÿ≥ÿ™ ⁄©ÿßŸÜÿßŸÑ‚ÄåŸáÿß ÿ±Ÿà ÿ™ŸÜÿ∏€åŸÖ ⁄©ŸÜŸá.")
        return
    msg = bot.send_message(message.chat.id, "üì• ŸÑÿ∑ŸÅÿßŸã ŸÑ€åÿ≥ÿ™ ⁄©ÿßŸÜÿßŸÑ‚ÄåŸáÿß ÿ±Ÿà ÿ®Ÿá ÿµŸàÿ±ÿ™ ÿ¨ÿØÿß ÿ¥ÿØŸá ÿ®ÿß ŸÅÿßÿµŸÑŸá ÿ®ŸÅÿ±ÿ≥ÿ™ (ŸÖÿ´ŸÑÿßŸã:\n@channel1 @channel2 ...):")
    bot.register_next_step_handler(msg, save_channels)

def save_channels(message):
    global REQUIRED_CHANNELS
    new_channels = message.text.strip().split()
    REQUIRED_CHANNELS = new_channels
    text = "\n".join([f"‚úÖ {ch}" for ch in REQUIRED_CHANNELS])
    bot.send_message(message.chat.id, f"‚úÖ ŸÑ€åÿ≥ÿ™ ⁄©ÿßŸÜÿßŸÑ‚ÄåŸáÿß ÿ¢ŸæÿØ€åÿ™ ÿ¥ÿØ:\n{text}")

@bot.message_handler(func=lambda m: True)
def handle_video_request(message):
    user_id = message.from_user.id
    if not is_user_subscribed(user_id):
        bot.send_message(message.chat.id, "‚õîÔ∏è ÿßŸàŸÑ ÿ®ÿß€åÿØ ÿπÿ∂Ÿà ŸáŸÖŸá ⁄©ÿßŸÜÿßŸÑ‚ÄåŸáÿß ÿ®ÿ¥€å.")
        return

    url = message.text.strip()
    if "youtube.com" not in url and "youtu.be" not in url:
        bot.send_message(message.chat.id, "ŸÑÿ∑ŸÅÿßŸã ŸÅŸÇÿ∑ ŸÑ€åŸÜ⁄© €åŸàÿ™€åŸàÿ® ÿ®ŸÅÿ±ÿ≥ÿ™.")
        return

    msg = bot.send_message(message.chat.id, "üîÑ ÿØÿ± ÿ≠ÿßŸÑ ÿ®ÿ±ÿ±ÿ≥€å ŸÑ€åŸÜ⁄© Ÿà ⁄©€åŸÅ€åÿ™ ŸÖŸÜÿßÿ≥ÿ® ÿ≤€åÿ± 50MB...")
    filepath = download_best_quality(url)

    if filepath and os.path.exists(filepath):
        with open(filepath, 'rb') as f:
            bot.send_video(message.chat.id, f, caption="üéâ ÿß€åŸÜŸÖ Ÿà€åÿØ€åŸàÿ™!")
        os.remove(filepath)
    else:
        bot.send_message(message.chat.id, "‚ùå Ÿá€å⁄Ü ⁄©€åŸÅ€åÿ™€å ÿ≤€åÿ± 50MB ÿ®ÿ±ÿß€å ÿß€åŸÜ Ÿà€åÿØ€åŸà Ÿæ€åÿØÿß ŸÜÿ¥ÿØ.")

bot.polling()